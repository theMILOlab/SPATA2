% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adj-aZ.R
\name{attachUnit}
\alias{attachUnit}
\alias{attach_uni}
\title{Attach unit to distance}
\usage{
attachUnit(input)

attach_uni(input)
}
\arguments{
\item{input}{Character or numeric vector. Elements must match the
requirements of the \code{SPATA2} distance framework. See details
for more information.}
}
\value{
Character vector of the same length as \code{input}.
}
\description{
Reattaches the unit in form of a character suffix
to the distance values.
}
\details{
Several functions in \code{SPATA2} have arguments that take \emph{distance input}.
To specifically refer to a distance the unit must be specified. There are
three ways to create valid input for these arguments.

\strong{1. In pixel:}

There are two valid input options to specify the distance in pixel:

\itemize{
\item{numeric:}{ Single numeric values, e.g. \code{arg_input <- c(2, 3.554, 69, 100.67)}. If no unit
is specified the input will be interpreted as pixels.}
\item{character:}{ Suffixed with \emph{'px'}, e.g. \code{arg_input <- c('2px', '3.554px', '69px', '100.67px')}}
}

Note: The unit pixel (px) is used for distances as well as for areas. If pixel
refers to a distance the pixel side length is meant. If pixel refers to an area the
number of pixels is meant.

\strong{2. According to the Systeme international d`unites (SI):}

Specifying distances in SI units e.g. \code{arg_input <- c('2mm', '4mm')} etc.
requires the input to be a character as the unit must be provided as suffix.
Between the numeric value and the unit must be no empty space! Valid suffixes
can be obtained using the function \code{validUnitsOfLengthSI()}.

\strong{3. As vectors of class \code{unit}:}

Behind the scenes \code{SPATA2} works with the \code{units} package. Input
is converted into vectors of class \code{units}. Therefore, input can be directly
provided this way: \code{arg_input <- units::set_unit(x = c(2,4), value = 'mm')}
Note that \emph{pixel} is not a valid unit in the \code{units} package. If you want
to specify the input in pixel you have to use input option 1. In pixel.
}
\examples{

library(SPATA2)
library(SPATAData)

object <- downloadSpataObject("313_T")

pixel_values <- c(300, 400, 500)

mm_norm <- asMillimeter(pixel_values, object = object, round = 2)

mm_norm

mm_num <- asMillimeter(pixel_values, object = object, round = 2, as_numeric = TRUE)

mm_num

attachUnit(mm_num)

}
\keyword{internal}
