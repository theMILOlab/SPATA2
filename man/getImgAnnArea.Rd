% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getH-M.R
\name{getImgAnnArea}
\alias{getImgAnnArea}
\title{Obtain area of image annotation}
\usage{
getImgAnnArea(
  object,
  ids = NULL,
  unit = "mm2",
  tags = NULL,
  test = "any",
  as_numeric = TRUE,
  verbose = NULL,
  ...
)
}
\arguments{
\item{object}{An object of class \code{spata2}.}

\item{ids}{Character vector or \code{NULL}. If character, specifies the IDs
of the image annotations of interest. If numeric, the image annotations are picked by number.
If \code{NULL}, all image annotations are included - subsequent selection with \code{tags} and
\code{test} is possible.}

\item{unit}{Character value. Specifies the desired unit.}

\item{tags}{Character vector or \code{NULL}. If character, the tags for the image annotation
selection. See section \emph{Selection of image annotation with tags} for more information.}

\item{test}{Character value. One of \emph{any}. \emph{all}, \emph{identical}, \emph{not_identical} and
\emph{none}. Specifies how input for \code{tags} is used to select image annotations.
See section \emph{Selection of image annotation with tags} for more information.}

\item{verbose}{Logical. If set to TRUE informative messages regarding
the computational progress will be printed.

(Warning messages will always be printed.)}

\item{...}{Used to absorb deprecated arguments or functions.}
}
\value{
Numeric vector of the same length as \code{ids}. Named accordingly.
Contains the area of the image annotations in the unit that is specified in \code{unit}.
The unit is attached to the output as an attribute named \emph{unit}. E.g. if
\verb{unit = *mm2*} the output value has the unit \emph{mm^2}.
}
\description{
Computes the area of an image annotation in SI units of area.
}
\details{
First, the side length of each pixel is calculated and based on that the area.

Second, the number of pixels that fall in the area given by the outer border
of the image annotation is computed with \code{sp::point.in.polygon()}.

Third, if the image annotation contains holes the pixel that fall in these
holes are removed.

Fourth, the number of remaining pixels s multiplied with
the area per pixel.
}
\section{Selection of image annotations with tags}{


Input for argument \code{tags} specifies the tags of interest.
Argument \code{test} decides about how the specified tags are used to select
the image annotations of interest. There are multiple options:
\enumerate{
\item Argument \code{test} set to \emph{'any'} or \emph{1}: To be included, an image annotation
must be tagged with at least one of the input tags.
\item Argument \code{test} set to \emph{'all'} or \emph{2}: To be included, an image annotation
must be tagged with all of the input tags. Can contain tags that are not specified.
\item Argument \code{test} set to \emph{'identical'} or \emph{3}: To be included, an image annotation
must be tagged with all of the input tags. Can not be tagged with anything else.
\item Argument \code{test} set to \emph{not_identical} or \emph{4}: To be included, an image
annotation must \strong{not} be tagged with the combination of input tags.
\item Argument \code{test} set to \emph{'none'} or \emph{5}: To be included, an image annotation
must \strong{not} contain any of the input tags.
}

Note that the filtering process happens after the filtering by input for argument
\code{ids}. You can first select a group of image annotations by naming their IDs
and then select among them via tags and test. If \code{ids} is \code{NULL}, you select
among all image annotations via tags and test. And if \code{tags} is also \code{NULL},
the function uses all image annoations.
}

\seealso{
\code{\link[=getImgAnnOutlineDf]{getImgAnnOutlineDf()}}, \code{\link[=getCCD]{getCCD()}}, \code{\link[=as_unit]{as_unit()}}
}
