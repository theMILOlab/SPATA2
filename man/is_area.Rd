% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/i.R
\name{is_area}
\alias{is_area}
\alias{is_area_pixel}
\alias{is_area_si}
\title{Test area input}
\usage{
is_area(input, error = FALSE)

is_area_pixel(input, error = FALSE)

is_area_si(input, error = FALSE)
}
\arguments{
\item{input}{Character vector. Elements must match the requirements of
the \code{SPATA2} area framework. See details for more information.}
}
\value{
Logical vector of the same length as input and/or an error if \code{verbose}
is \code{TRUE}.
}
\description{
Tests if input refers to an area using international area
units according to the \code{SPATA2} area framework.

\itemize{
\item{\code{is_area()}:}{ Tests if input can be interpreted as an area}
\item{\code{is_area_si()}:} {Tests if input can be interpreted as an area in SI units.}
\item{\code{is_area_pixel()}:} {Tests if input can be interpreted as an area
in pixel.}
}
}
\details{
Several functions in \code{SPATA2} have arguments that take \emph{area input}.
To specifically refer to an area the unit must be specified. There are
three ways to create valid input for these arguments.

\strong{1. In pixel:}

There are two valid input options to specify an area in pixel:

\itemize{
\item{numeric:}{ Single numeric values, e.g. \code{arg_input = c(2, 3.554, 69, 100.67)}. If no unit
is specified the input will be interpreted as pixels.}
\item{character:}{ Suffixed with \emph{'px'}, e.g. \code{arg_input = c('2px', '3.554px', '69px', '100.67px')}}
}

Note: The unit pixel (px) is used for distances as well as for areas. If pixel
refers to a distance the pixel side length is meant. If pixel refers to an area the
number of pixels is meant.

\strong{2. According to the Systeme international d`unites (SI):}

Specifying areas in SI units e.g. \code{arg_input = c('2mm2', '4mm2')} etc.
requires the input to be a character as the unit must be provided as suffix.
Between the numeric value and the unit must be no empty space! Valid suffixes
can be obtained using the function \code{validUnitsOfAreaSI()}.

\strong{3. As vectors of class \code{unit}:}

Behind the scenes \code{SPATA2} works with the \code{units} package. Input
is converted into vectors of class \code{units}. Therefore, input can be directly
provided this way: \code{arg_input = units::set_unit(x = c(2,4), value = 'mm2')}
Note that \emph{pixel} is not a valid unit in the \code{units} package. If you want
to specify the input in pixel you have to use input option 1. In pixel.
}
\examples{

library(SPATA2)

##### provide input as character vectors

# will return TRUE

is_area(input = c('2mm2', '4mm2'))

# will return FALSE

is_area(input = c('200 m2')) # space between value and unit

# will return TRUE

area_values <- c(200, 400)

area_values <- as_area(area_values, unit = "mm2")

is_area(input = area_values)

###### use units package

library(units)

area_values2 <- set_units(x = c(200, 300), value = "mm2")

is_area(area_values2)


}
